{"version":3,"sources":["Components/auth/LogIn/InputField.jsx","Components/common/GlobalStyledComponents.jsx","Components/auth/LogIn/Login.jsx"],"names":["InputField","label","props","useField","field","meta","TextField","error","touched","helperText","selectSize","size","FormCotnainer","styled","div","margin","StyledForm","Form","FormInput","FormButton","Button","Login","dispatch","useDispatch","isAuthenticated","useSelector","state","auth","validationSchema","Yup","shape","email","required","max","password","min","to","className","initialValues","onSubmit","values","actions","LogIn","errors","isSubmitting","name","type","disabled","variant"],"mappings":"kTAkBeA,MAdf,YAA0C,IAApBC,EAAmB,EAAnBA,MAAUC,EAAS,2BACjBC,YAASD,GADQ,mBAChCE,EADgC,KACzBC,EADyB,KAGvC,OACE,kBAACC,EAAA,EAAD,iBACMJ,EACAE,EAFN,CAGEH,MAAOA,EACPM,MAAOF,EAAKE,OAASF,EAAKG,QAC1BC,WAAYJ,EAAKE,OAASF,EAAKG,SAAWH,EAAKE,U,y/BCRrD,IAAMG,EAAa,SAACC,GAClB,OAAQA,GACN,IAAK,KACH,MAAO,WACT,IAAK,IACH,MAAO,WACT,IAAK,IACH,MAAO,SACT,IAAK,IACH,MAAO,WACT,IAAK,KACH,MAAO,SAET,QACE,MAAO,WAIAC,EAAgBC,IAAOC,IAAV,KAId,SAACZ,GACT,OAAOA,EAAMa,QAAUL,EAAWR,EAAMa,WAa/BC,EAAaH,YAAOI,IAAPJ,CAAH,KACX,SAACX,GACT,OAAOQ,EAAWR,EAAMa,WAWfG,EAAYL,YAAOb,EAAPa,CAAH,KAYR,SAACX,GACT,OAAOQ,EAAWR,EAAMa,WAKjBI,EAAaN,YAAOO,IAAPP,CAAH,KAGT,SAACX,GACT,OAAOQ,EAAWR,EAAMa,Y,iCC5E9B,qFAqEeM,UAxDD,WACZ,IAAMC,EAAWC,cACTC,EAAoBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAjDH,gBAGFI,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaG,WAAWD,QAAQE,IAAI,IAC3CC,SAAUL,MAAaM,IAAI,GAAGF,IAAI,IAAID,aAQxC,OAAIR,EACK,kBAAC,IAAD,CAAUY,GAAG,eAGpB,kBAAC,IAAD,CAAerB,OAAO,KACpB,uCACA,2BACE,uBAAGsB,UAAU,gBADf,2BAIA,kBAAC,IAAD,CACEC,cAtBgB,CAAEP,MAAO,GAAIG,SAAU,IAuBvCN,iBAAkBA,EAClBW,SAnBW,SAACC,EAAQC,GAAa,IAC7BV,EAAoBS,EAApBT,MAAOG,EAAaM,EAAbN,SAEfZ,EAASoB,YAAM,CAAEX,QAAOG,WAAUO,gBAkB7B,cAAGE,OAAH,IAAWC,EAAX,EAAWA,aAAX,EAAyBpC,QAAzB,OACC,kBAAC,IAAD,CAAYO,OAAO,KACjB,kBAAC,IAAD,CAAW8B,KAAK,QAAQ5C,MAAM,UAC9B,kBAAC,IAAD,CACE4C,KAAK,WACLC,KAAK,WACL7C,MAAM,aAER,kBAAC,IAAD,CACE8C,SAAUH,EACVI,QAAQ,YACRrC,KAAK,QACLmC,KAAK,UAEJF,EAAe,aAAe,cAMvC,qDACyB,kBAAC,IAAD,CAAMR,GAAG,aAAT","file":"static/js/15.c76c57a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useField } from \"formik\";\r\n\r\nfunction InputField({ label, ...props }) {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      label={label}\r\n      error={meta.error && meta.touched}\r\n      helperText={meta.error && meta.touched && meta.error}\r\n    />\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Form } from \"formik\";\r\nimport InputField from \"../auth/LogIn/InputField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst selectSize = (size) => {\r\n  switch (size) {\r\n    case \"xs\":\r\n      return \"1.5rem 0\";\r\n    case \"s\":\r\n      return \"2.5rem 0\";\r\n    case \"m\":\r\n      return \"3rem 0\";\r\n    case \"l\":\r\n      return \"3.5rem 0\";\r\n    case \"xl\":\r\n      return \"5rem 0\";\r\n\r\n    default:\r\n      return \"1rem 0\";\r\n  }\r\n};\r\n\r\nexport const FormCotnainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2rem;\r\n  margin: ${(props) => {\r\n    return props.margin && selectSize(props.margin);\r\n  }};\r\n\r\n  & > h1 {\r\n    color: var(--primary-color);\r\n    font-size: 5rem;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  p {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nexport const StyledForm = styled(Form)`\r\n  margin: ${(props) => {\r\n    return selectSize(props.margin);\r\n  }};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  > small {\r\n    font-size: 1.1rem;\r\n    margin: 1rem 0;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled(InputField)`\r\n  input {\r\n    padding: 1rem;\r\n    font-size: 2rem;\r\n  }\r\n  label {\r\n    font-size: 1.7rem;\r\n  }\r\n  p {\r\n    font-size: 1.4rem;\r\n  }\r\n  && {\r\n    margin: ${(props) => {\r\n      return selectSize(props.margin);\r\n    }};\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled(Button)`\r\n  align-self: flex-start;\r\n  && {\r\n    margin: ${(props) => {\r\n      return selectSize(props.margin);\r\n    }};\r\n  }\r\n  && {\r\n    background: #343a40;\r\n    color: #fff;\r\n    font-size: 1.8rem;\r\n  }\r\n  &&:hover {\r\n    background: #17a2b8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LogIn } from \"../../../redux/actions/auth\";\r\nimport { Formik, Form } from \"formik\";\r\nimport {\r\n  StyledForm,\r\n  FormInput,\r\n  FormCotnainer,\r\n  FormButton,\r\n} from \"../../common/GlobalStyledComponents\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const initialValues = { email: \"\", password: \"\" };\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required().email().max(55),\r\n    password: Yup.string().min(6).max(55).required(),\r\n  });\r\n  const OnSubmit = (values, actions) => {\r\n    const { email, password } = values;\r\n    // send actions to not cause memory leak when component remove from dom\r\n    dispatch(LogIn({ email, password, actions }));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/dashboard\"></Redirect>;\r\n  }\r\n  return (\r\n    <FormCotnainer margin=\"s\">\r\n      <h1>Sign In</h1>\r\n      <p>\r\n        <i className=\"fas fa-user\"></i> Sign Into Your Account\r\n      </p>\r\n\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={OnSubmit}\r\n      >\r\n        {({ errors, isSubmitting, touched }) => (\r\n          <StyledForm margin=\"s\">\r\n            <FormInput name=\"email\" label=\"Email\"></FormInput>\r\n            <FormInput\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n            ></FormInput>\r\n            <FormButton\r\n              disabled={isSubmitting}\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              type=\"submit\"\r\n            >\r\n              {isSubmitting ? \"loading...\" : \"Submit\"}\r\n            </FormButton>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n\r\n      <p>\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </FormCotnainer>\r\n  );\r\n};\r\nexport default Login;\r\n"],"sourceRoot":""}