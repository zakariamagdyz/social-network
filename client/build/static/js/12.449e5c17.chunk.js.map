{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/actions/Posts.js","Components/Posts/PostItem.jsx","Components/Posts/CommentForm.jsx","Components/Posts/CommentItem.style.jsx","Components/Posts/CommentItem.jsx","Components/Posts/Post.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","fetchPosts","dispatch","a","axios","get","res","type","postType","FETCH_POSTS","payload","data","FETCH_POSTS_FAILED","setAlert","response","message","fetchAPost","id","FETCH_A_POST","FETCH_A_POST_FAILED","deleteAPost","delete","DELETE_POST","DELETE_POST_FAILED","addLike","post","UPDATE_LIKES","createPost","config","headers","body","JSON","stringify","text","CREATE_POST","AddComment","postId","ADD_COMMENT","deleteComment","commentId","REMOVE_COMMENT","getLikes","GET_LIKES_START","GET_LIKES","GET_LIKES_FAILED","postItemVariants","hidden","x","opacity","visible","transition","exit","ease","PostItem","_id","likes","comments","date","user","showActions","toggleModal","useDispatch","auth","useSelector","state","div","className","variants","initial","animate","to","src","avatar","alt","name","format","onClick","find","like","isAuthenticated","role","CommentForm","useState","setText","onSubmit","e","preventDefault","cols","rows","placeholder","required","onChange","target","CommentContainer","styled","motion","CommentOwner","Link","CommentImage","img","CommentName","p","CommentData","CommentDelete","button","commentVariant","CommentItem","comment","Post","useParams","useEffect","onePost","loadingOnePost","Spinner","map","key"],"mappings":"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","file":"static/js/12.449e5c17.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { postType } from \"../types/posts\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\"/api/v1/posts\");\r\n\r\n    dispatch({ type: postType.FETCH_POSTS, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: postType.FETCH_POSTS_FAILED });\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const fetchAPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/v1/posts/${id}`);\r\n\r\n    dispatch({ type: postType.FETCH_A_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: postType.FETCH_A_POST_FAILED });\r\n  }\r\n};\r\n\r\nexport const deleteAPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/v1/posts/${id}`);\r\n\r\n    dispatch({ type: postType.DELETE_POST, payload: id });\r\n  } catch (error) {\r\n    dispatch({ type: postType.DELETE_POST_FAILED });\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const updateAPost = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/v1/posts/${id}`);\r\n\r\n    dispatch({ type: postType.UPDATE_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const addLike = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(`/api/v1/posts/${id}/like`);\r\n\r\n    dispatch({ type: postType.UPDATE_LIKES, payload: { id, data: res.data } });\r\n  } catch (error) {\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n  const body = JSON.stringify({ text: post });\r\n  try {\r\n    const res = await axios.post(\"/api/v1/posts\", body, config);\r\n    dispatch({ type: postType.CREATE_POST, payload: res.data });\r\n  } catch (error) {\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const AddComment = (postId, text) => async (dispatch) => {\r\n  const body = JSON.stringify({ text });\r\n  const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n  try {\r\n    const res = await axios.post(\r\n      `/api/v1/posts/${postId}/comments`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: postType.ADD_COMMENT, payload: res.data });\r\n  } catch (error) {\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/v1/posts/${postId}/${commentId}`);\r\n\r\n    dispatch({ type: postType.REMOVE_COMMENT, payload: commentId });\r\n  } catch (error) {\r\n    dispatch(setAlert(error.response.data.message, \"danger\"));\r\n  }\r\n};\r\n\r\nexport const getLikes = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: postType.GET_LIKES_START });\r\n    const res = await axios.get(`/api/v1/posts/${id}/likes`);\r\n\r\n    dispatch({ type: postType.GET_LIKES, payload: res.data });\r\n  } catch (error) {\r\n    dispatch({ type: postType.GET_LIKES_FAILED });\r\n  }\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteAPost, addLike } from \"../../redux/actions/Posts\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n////////\r\n\r\nconst postItemVariants = {\r\n  hidden: { x: \"100vw\", opacity: 0 },\r\n  visible: { x: 0, opacity: 1, transition: { type: \"spring\" } },\r\n  exit: {\r\n    x: \"-100vw\",\r\n    transition: { ease: \"easeInOut\" },\r\n  },\r\n};\r\n\r\nconst PostItem = ({\r\n  _id,\r\n  text,\r\n  likes,\r\n  comments,\r\n  date,\r\n  user,\r\n  showActions,\r\n  toggleModal,\r\n  postId,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <motion.div\r\n      className=\"post bg-white p-1 my-1\"\r\n      variants={postItemVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <div className=\"post__user\">\r\n        <Link to={`/profile/${user._id}`}>\r\n          <img className=\"round-img\" src={`/${user && user.avatar}`} alt=\"\" />\r\n          <h4>{user && user.name}</h4>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"post__data\">\r\n        <p className=\"my-1\">{text}</p>\r\n        <Moment format=\"YYYY-MM-DD h:mm a\" className=\"time\">\r\n          {date}\r\n        </Moment>\r\n      </div>\r\n\r\n      {showActions && (\r\n        <div className=\"post__actions\">\r\n          <div className=\"post__actions__like\">\r\n            {likes.length > 0 && (\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light free\"\r\n                onClick={() => {\r\n                  toggleModal();\r\n                  postId(_id);\r\n                }}\r\n              >\r\n                <i className=\"fas fa-thumbs-up\"></i>{\" \"}\r\n                <span>{likes.length} </span>\r\n              </button>\r\n            )}\r\n\r\n            {likes.find((like) => like.user === auth.user._id) ? (\r\n              <button\r\n                className=\"btn btn-liked\"\r\n                onClick={() => dispatch(addLike(_id))}\r\n              >\r\n                liked\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-light btn-unliked\"\r\n                onClick={() => dispatch(addLike(_id))}\r\n              >\r\n                like\r\n              </button>\r\n            )}\r\n          </div>\r\n\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{\" \"}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {(auth.isAuthenticated && auth.user._id === user._id) ||\r\n          (auth.user && auth.user.role === \"admin\") ? (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n              onClick={() => dispatch(deleteAPost(_id))}\r\n            >\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React, { useState } from \"react\";\r\nimport { AddComment, deleteComment } from \"../../redux/actions/Posts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst CommentForm = ({ postId }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(AddComment(postId, text));\r\n    setText(\"\");\r\n  };\r\n  return (\r\n    <div className=\"post-form\">\r\n      <div className=\"bg-primary p\">\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form className=\"form my-1\" onSubmit={onSubmit}>\r\n        <textarea\r\n          name=\"text\"\r\n          cols=\"30\"\r\n          rows=\"5\"\r\n          placeholder=\"Create a comment\"\r\n          required\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        ></textarea>\r\n        <input type=\"submit\" className=\"btn btn-dark my-1\" value=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentForm;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const CommentContainer = styled(motion.div)`\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  align-items: center;\r\n  border: 2px dashed #ccc;\r\n  margin-top: 15px;\r\n  background: #eee;\r\n`;\r\n\r\nexport const CommentOwner = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CommentImage = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const CommentName = styled.p`\r\n  text-transform: capitalize;\r\n\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const CommentData = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 20px;\r\n  & > time {\r\n    font-size: 12px;\r\n    opacity: 0.7;\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nexport const CommentDelete = styled.button`\r\n  margin-left: auto;\r\n  padding: 5px;\r\n  background: #dc3545;\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #fff;\r\n`;\r\n","import React from \"react\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteComment } from \"../../redux/actions/Posts\";\r\nimport {\r\n  CommentContainer,\r\n  CommentImage,\r\n  CommentName,\r\n  CommentOwner,\r\n  CommentData,\r\n  CommentDelete,\r\n} from \"./CommentItem.style\";\r\n\r\n////////////\r\n\r\nconst commentVariant = {\r\n  hidden: { x: \"100vw\", opacity: 0 },\r\n  visible: { x: 0, opacity: 1, transition: { type: \"spring\" } },\r\n  exit: {\r\n    x: \"-100vw\",\r\n    transition: { ease: \"easeInOut\" },\r\n  },\r\n};\r\n\r\nconst CommentItem = ({ comment: { text, date, _id, user }, postId }) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <CommentContainer\r\n      variants={commentVariant}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <CommentOwner to={`/profile/${user._id}`}>\r\n        <CommentImage\r\n          className=\"round-img\"\r\n          src={`/${user && user.avatar}`}\r\n          alt=\"\"\r\n        />\r\n        <CommentName>{user && user.name}</CommentName>\r\n      </CommentOwner>\r\n      <CommentData>\r\n        <h4>{text}</h4>\r\n        <Moment format=\"YYYY-MM-DD HH:mm\">{date}</Moment>\r\n      </CommentData>\r\n\r\n      {(auth.isAuthenticated && auth.user._id === user._id) ||\r\n      (auth.user && auth.user.role === \"admin\") ? (\r\n        <CommentDelete onClick={() => dispatch(deleteComment(postId, _id))}>\r\n          delete\r\n        </CommentDelete>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </CommentContainer>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","import React, { useEffect, Fragment } from \"react\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { fetchAPost } from \"../../redux/actions/Posts\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport PostItem from \"./PostItem\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport CommentItem from \"./CommentItem\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nconst Post = () => {\r\n  const id = useParams().id;\r\n  const dispatch = useDispatch();\r\n\r\n  const post = useSelector((state) => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAPost(id));\r\n  }, [dispatch]);\r\n\r\n  if (!post.onePost && !post.loadingOnePost) {\r\n    return <Redirect to=\"/error\" />;\r\n  }\r\n\r\n  return post.loadingOnePost ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to=\"/posts\" className=\"btn btn-light\">\r\n        Back to posts\r\n      </Link>\r\n      <PostItem {...post.onePost}></PostItem>\r\n      <CommentForm postId={post.onePost._id} />\r\n      <AnimatePresence>\r\n        {post.onePost.comments.map((comment) => (\r\n          <CommentItem\r\n            key={comment._id}\r\n            comment={comment}\r\n            postId={post.onePost._id}\r\n          />\r\n        ))}\r\n      </AnimatePresence>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}